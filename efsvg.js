var EFSVG=function(h){var g={version:"1.0.0",svgNS:"http://www.w3.org/2000/svg",svgNSLink:"http://www.w3.org/1999/xlink",svgVer:"1.1",log:!0},k=["rect","ellipse","line"],c="line path rect ellipse circle text textPath image linearGradient radialGradient".split(" "),d={EFtype:"rect",EFtag:"",EFx:10,EFy:0,EFfactor:1,EFxO:0,EFyO:0,EFsector:!1,EFstart:0,EFend:1,EFtoShape:{},EFtoProgress:0},p=[[0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,0,1,1,1,1,1,1,0,0,1,1],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,
1,1],[0,1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1],[0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1],[1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1],[0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1],[0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1],[0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1]],n="r rx ry cx cy x y width height x1 y1 x2 y2 points d text transform xlink:href stroke stroke-width stroke-dasharray stroke-dashoffset stroke-linecap stroke-opacity fill fill-opacity opacity filter".split(" ");
g.el=function(a){var b="",f={};if("string"===typeof a)tag=b=a.toLowerCase(),f.EFtype=b,f.EFtag=tag;else if("object"===typeof a)f=a,b=f.EFtype,tag=f.EFtag;else{g.log&&console.warn("Wrong input in el(): '"+a+"'");return}a=b;-1!==k.indexOf(a)?a=!0:(g.log&&console.warn("Wrong type of the EF element: '"+a+"'"),a=!1);if(a){b=a=q(tag);if(!b.hasOwnProperty(d[0]))for(key in d)b[key]=d[key];for(propName in f)d.hasOwnProperty(propName)?b[propName]=f[propName]:g.log&&console.warn("Wrong property name '"+propName+
"' for object of type '"+b.EFtype+"'");a.hasOwnProperty("EFtype")||g.log&&console.warn("Trying to update SVG type of the object of undefined type: "+a.toString());f=a.tagName;b=-1;a.hasOwnProperty("EFtype")||g.log&&console.warn("Object has no <type> property assigned. Is it EFSVG object?");switch(a.EFtype){case "rect":b=2;break;case "ellipse":b=3;break;case "line":b=1}0<=b||(g.log&&console.warn("Failed to identify SVG type <tagName> for object: "+a.toString()+" of type: "+a.EFtype),b=void 0);0>b||
b>c.length?(g.log&&console.warn("Wrong tagId in <tagName> function: "+b+" for object of type: "+a.EFtype),b=null):b=c[b];if(f!==b){g.log&&console.log("Tag of object with type: "+a.EFtype+" has to be changed from <"+f+"> to <"+b+">");if(a){for(key in d)d[key]=a[key];a=d}else a=void 0;a.EFtag=b;a=e.el(a)}var f=a,b=c.indexOf(f.tagName),b=p[b],h=n.length-1;do{var m=n[h],l="AN"+m;if(!b[h])f.hasOwnProperty(l)&&delete f[l];else if(!f.hasOwnProperty(l)){var r=document.createAttribute(m);f.setAttributeNode(r);
f[l]=f.getAttributeNode(m)}}while(h--);return a}};var q=function(a){g.log&&console.log("Creating a DOM element of type: "+a);return h.createElementNS(this.ns,a)};return g}(document);EFSVG.u=JSUTILS;
var JSUTILS=function(){function h(c){return Array.isArray?Array.isArray(c):c instanceof Array}function g(c,d){if(c&&d)if(h(c)){var g=c.length-1;do d(c[g]);while(g--)}else for(key in c)d(key)}var k={};k.isArray=h;k.typeOf=function(c){var d=typeof c;"object"===d&&(c?h(c)&&(d="array"):d="null");return d};k.forEachIn=g;k.resForEachIn=function(c,d){if(c&&d){var h=[];g(c,function(c){h.push(d(c))});return h}};return k}();
